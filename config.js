const fs = require('fs-extra')
if (fs.existsSync('.env')) require('dotenv').config({ path: __dirname+'/.env' })


//═══════[Required Variables]════════\\
global.audio= "" ;  
global.video= "" ;
global.port =process.env.PORT 
global.appUrl=process.env.APP_URL || ""     // put your deploy app/bot url here, for 24/7 for (render , koyeb, glitch)
global.email ="saimsamsun789@gmail.com"
global.location="Lahore,Pakistan."


global.mongodb= process.env.MONGODB_URI || "false"  
global.allowJids= process.env.ALLOW_JID || "null" 
global.blockJids= process.env.BLOCK_JID || "null"
global.DATABASE_URL = process.env.DATABASE_URL || "false"

global.timezone= process.env.TZ || process.env.TIME_ZONE || "Asia/Karachi";
global.github=process.env.GITHUB|| "https://github.com/SuhailTechInfo/Suhail-Md-3";
global.gurl  =process.env.GURL  || "https://whatsapp.com/channel/0029VagJIAr3bbVBCpEkAM07";
global.website =process.env.GURL || "https://whatsapp.com/channel/0029VagJIAr3bbVBCpEkAM07" ; 
global.THUMB_IMAGE = process.env.THUMB_IMAGE || process.env.IMAGE || "https://i.ibb.co/TgwRyHR/Ephoto360-com-166de101e03cd7.jpg" || "https://i.ibb.co/bH1kbX0/a4c0b1af253197d4837ff6760d5b81c0.jpg" ; // SET LOGO FOR IMAGE 
global.caption = process.env.CAPTION || global.caption || "Made With LOVE!" 


global.devs = "" // Developer Contacts
global.sudo = process.env.SUDO ? process.env.SUDO.replace(/[\s+]/g, '') : "null";
global.owner= process.env.OWNER_NUMBER ? process.env.OWNER_NUMBER.replace(/[\s+]/g, '') : "";




//========================= [ BOT SETTINGS ] ======8===================\\
global.style = process.env.STYLE   || Math.floor(Math.random()*6) || '0'  // put '1' to "5" here to check bot styles
global.flush = process.env.FLUSH   || "false"; // Make it "true" if bot not responed
global.gdbye = process.env.GOODBYE || process.env.CAN_GOODBYE || "false"; 
global.wlcm  = process.env.WELCOME || process.env.CAN_WELCOME || Math.floor(Math.random()*3)  === 1 ?  "true" : "false" ;  // Make it "false" for disable WELCOME 

global.warncount = process.env.WARN_COUNT || 3
global.disablepm = process.env.DISABLE_PM || "false"
global.disablegroup = process.env.DISABLE_GROUPS || "true", // disable bot in groups when public mode

global.MsgsInLog = process.env.MSGS_IN_LOG|| "false" // "true"  to see messages , "log" to show logs , "false" to hide logs messages
global.userImages= process.env.USER_IMAGES || "" //"https://i.ibb.co/pXyNHj8/suhail.jpg" // "image" // set Image/video urls here
global.waPresence= process.env.WAPRESENCE ||  "null" ; // 'unavailable' | 'available' | 'composing' | 'recording' | 'paused'


//========================= [ AUTO READ MSGS & CMDS ] =========================\\
global.readcmds = process.env.READ_COMMAND || "true"
global.readmessage = process.env.READ_MESSAGE || "false"
global.readmessagefrom = process.env.READ_MESSAGE_FROM || "";


//========================= [ AUTO SAVE & READ STATUS ] =========================\\
global.read_status = process.env.AUTO_READ_STATUS || "true"
global.save_status = process.env.AUTO_SAVE_STATUS || "false"
global.save_status_from =  process.env.SAVE_STATUS_FROM  || "";
global.read_status_from =  process.env.READ_STATUS_FROM  ||  "";

global.api_smd = "https://api-smd.onrender.com/" //  || "https://api-smd-1.vercel.app" // expires
global.scan = "https://suhail-md-vtsf.onrender.com";

global.SESSION_ID = process.env.SESSION_ID  || "SUHAIL_05_26_05_24_ewogICJjcmVkcy5qc29uIjogIntcbiAgXCJub2lzZUtleVwiOiB7XG4gICAgXCJwcml2YXRlXCI6IHtcbiAgICAgIFwidHlwZVwiOiBcIkJ1ZmZlclwiLFxuICAgICAgXCJkYXRhXCI6IFtcbiAgICAgICAgMTg0LFxuICAgICAgICAxMTIsXG4gICAgICAgIDc5LFxuICAgICAgICAxOTksXG4gICAgICAgIDMsXG4gICAgICAgIDEzNixcbiAgICAgICAgMzMsXG4gICAgICAgIDE2MSxcbiAgICAgICAgMTIsXG4gICAgICAgIDE4MyxcbiAgICAgICAgMzQsXG4gICAgICAgIDg3LFxuICAgICAgICAyMSxcbiAgICAgICAgNTUsXG4gICAgICAgIDc5LFxuICAgICAgICAxMDEsXG4gICAgICAgIDUzLFxuICAgICAgICAxOTgsXG4gICAgICAgIDIwOCxcbiAgICAgICAgOTksXG4gICAgICAgIDE3NCxcbiAgICAgICAgMjQ0LFxuICAgICAgICAxMTYsXG4gICAgICAgIDMxLFxuICAgICAgICAxMixcbiAgICAgICAgMjI4LFxuICAgICAgICAxMzEsXG4gICAgICAgIDQ4LFxuICAgICAgICA1NCxcbiAgICAgICAgNzEsXG4gICAgICAgIDE5MyxcbiAgICAgICAgMTAwXG4gICAgICBdXG4gICAgfSxcbiAgICBcInB1YmxpY1wiOiB7XG4gICAgICBcInR5cGVcIjogXCJCdWZmZXJcIixcbiAgICAgIFwiZGF0YVwiOiBbXG4gICAgICAgIDEzMixcbiAgICAgICAgMTI5LFxuICAgICAgICA3NyxcbiAgICAgICAgNTUsXG4gICAgICAgIDEwMCxcbiAgICAgICAgMjI4LFxuICAgICAgICAyNSxcbiAgICAgICAgMTY2LFxuICAgICAgICAyMjcsXG4gICAgICAgIDQ3LFxuICAgICAgICAxMjIsXG4gICAgICAgIDI1MSxcbiAgICAgICAgMTc3LFxuICAgICAgICAyMzksXG4gICAgICAgIDIyMixcbiAgICAgICAgOTcsXG4gICAgICAgIDE5NCxcbiAgICAgICAgOTAsXG4gICAgICAgIDI0MCxcbiAgICAgICAgMTgxLFxuICAgICAgICAxODAsXG4gICAgICAgIDU3LFxuICAgICAgICAyLFxuICAgICAgICAxMjEsXG4gICAgICAgIDcwLFxuICAgICAgICAxNDcsXG4gICAgICAgIDIwNSxcbiAgICAgICAgMTYzLFxuICAgICAgICAxNDIsXG4gICAgICAgIDI0NCxcbiAgICAgICAgNixcbiAgICAgICAgMzJcbiAgICAgIF1cbiAgICB9XG4gIH0sXG4gIFwicGFpcmluZ0VwaGVtZXJhbEtleVBhaXJcIjoge1xuICAgIFwicHJpdmF0ZVwiOiB7XG4gICAgICBcInR5cGVcIjogXCJCdWZmZXJcIixcbiAgICAgIFwiZGF0YVwiOiBbXG4gICAgICAgIDE1MixcbiAgICAgICAgODksXG4gICAgICAgIDE3NSxcbiAgICAgICAgMjM4LFxuICAgICAgICA2NyxcbiAgICAgICAgMjEzLFxuICAgICAgICAxNzksXG4gICAgICAgIDQsXG4gICAgICAgIDE2OCxcbiAgICAgICAgMjA4LFxuICAgICAgICAyLFxuICAgICAgICAxNTEsXG4gICAgICAgIDEzNixcbiAgICAgICAgMTY5LFxuICAgICAgICAxMjksXG4gICAgICAgIDE2NCxcbiAgICAgICAgMTc3LFxuICAgICAgICAxODgsXG4gICAgICAgIDEwNCxcbiAgICAgICAgMjUwLFxuICAgICAgICAzOSxcbiAgICAgICAgNSxcbiAgICAgICAgNjAsXG4gICAgICAgIDIwMixcbiAgICAgICAgMjM0LFxuICAgICAgICAxMzUsXG4gICAgICAgIDI0NyxcbiAgICAgICAgOTEsXG4gICAgICAgIDY0LFxuICAgICAgICAyMzQsXG4gICAgICAgIDE5MCxcbiAgICAgICAgMTA3XG4gICAgICBdXG4gICAgfSxcbiAgICBcInB1YmxpY1wiOiB7XG4gICAgICBcInR5cGVcIjogXCJCdWZmZXJcIixcbiAgICAgIFwiZGF0YVwiOiBbXG4gICAgICAgIDE5MixcbiAgICAgICAgNjksXG4gICAgICAgIDQ0LFxuICAgICAgICAyMixcbiAgICAgICAgMjM2LFxuICAgICAgICAyNDksXG4gICAgICAgIDEwNixcbiAgICAgICAgMTkxLFxuICAgICAgICAxNjQsXG4gICAgICAgIDM0LFxuICAgICAgICA0MCxcbiAgICAgICAgMjIzLFxuICAgICAgICAxODgsXG4gICAgICAgIDEzMyxcbiAgICAgICAgMjYsXG4gICAgICAgIDEyNyxcbiAgICAgICAgMTYyLFxuICAgICAgICA2NCxcbiAgICAgICAgNCxcbiAgICAgICAgOSxcbiAgICAgICAgMzksXG4gICAgICAgIDEzNixcbiAgICAgICAgMTI0LFxuICAgICAgICAxOTYsXG4gICAgICAgIDIwNyxcbiAgICAgICAgNjIsXG4gICAgICAgIDIyMCxcbiAgICAgICAgMjA2LFxuICAgICAgICA1NSxcbiAgICAgICAgMTA1LFxuICAgICAgICAyMjUsXG4gICAgICAgIDYwXG4gICAgICBdXG4gICAgfVxuICB9LFxuICBcInNpZ25lZElkZW50aXR5S2V5XCI6IHtcbiAgICBcInByaXZhdGVcIjoge1xuICAgICAgXCJ0eXBlXCI6IFwiQnVmZmVyXCIsXG4gICAgICBcImRhdGFcIjogW1xuICAgICAgICAxMzYsXG4gICAgICAgIDE2MSxcbiAgICAgICAgMTE0LFxuICAgICAgICA2LFxuICAgICAgICAyNDUsXG4gICAgICAgIDEzNixcbiAgICAgICAgMTE0LFxuICAgICAgICAxMTYsXG4gICAgICAgIDExOCxcbiAgICAgICAgNDIsXG4gICAgICAgIDQ5LFxuICAgICAgICAyMzksXG4gICAgICAgIDI0LFxuICAgICAgICAxMjIsXG4gICAgICAgIDE3LFxuICAgICAgICAxMjEsXG4gICAgICAgIDI1MixcbiAgICAgICAgMTAyLFxuICAgICAgICAxODksXG4gICAgICAgIDUzLFxuICAgICAgICAyNDAsXG4gICAgICAgIDEyNyxcbiAgICAgICAgMjQ0LFxuICAgICAgICA1LFxuICAgICAgICA4MSxcbiAgICAgICAgMjQyLFxuICAgICAgICAyMjQsXG4gICAgICAgIDE3MSxcbiAgICAgICAgMzIsXG4gICAgICAgIDksXG4gICAgICAgIDc4LFxuICAgICAgICA3NVxuICAgICAgXVxuICAgIH0sXG4gICAgXCJwdWJsaWNcIjoge1xuICAgICAgXCJ0eXBlXCI6IFwiQnVmZmVyXCIsXG4gICAgICBcImRhdGFcIjogW1xuICAgICAgICAxODksXG4gICAgICAgIDUsXG4gICAgICAgIDIwMCxcbiAgICAgICAgMTQ1LFxuICAgICAgICAyNDAsXG4gICAgICAgIDE0OCxcbiAgICAgICAgMTI2LFxuICAgICAgICA4MCxcbiAgICAgICAgMTc2LFxuICAgICAgICAxMzUsXG4gICAgICAgIDc5LFxuICAgICAgICA1NyxcbiAgICAgICAgODUsXG4gICAgICAgIDIzMCxcbiAgICAgICAgMTU1LFxuICAgICAgICAxNTEsXG4gICAgICAgIDEzNixcbiAgICAgICAgMTkxLFxuICAgICAgICAyMDksXG4gICAgICAgIDIwMixcbiAgICAgICAgMTgxLFxuICAgICAgICAxMjAsXG4gICAgICAgIDk4LFxuICAgICAgICAyMjIsXG4gICAgICAgIDcxLFxuICAgICAgICAyMDksXG4gICAgICAgIDIwMSxcbiAgICAgICAgOTEsXG4gICAgICAgIDE1NSxcbiAgICAgICAgMTMyLFxuICAgICAgICAxODUsXG4gICAgICAgIDExNFxuICAgICAgXVxuICAgIH1cbiAgfSxcbiAgXCJzaWduZWRQcmVLZXlcIjoge1xuICAgIFwia2V5UGFpclwiOiB7XG4gICAgICBcInByaXZhdGVcIjoge1xuICAgICAgICBcInR5cGVcIjogXCJCdWZmZXJcIixcbiAgICAgICAgXCJkYXRhXCI6IFtcbiAgICAgICAgICAxNixcbiAgICAgICAgICAyNDEsXG4gICAgICAgICAgMTE1LFxuICAgICAgICAgIDE3OCxcbiAgICAgICAgICAxNzQsXG4gICAgICAgICAgMTg5LFxuICAgICAgICAgIDYyLFxuICAgICAgICAgIDExMyxcbiAgICAgICAgICA3NixcbiAgICAgICAgICA2MCxcbiAgICAgICAgICAzNSxcbiAgICAgICAgICAxMzYsXG4gICAgICAgICAgMTMyLFxuICAgICAgICAgIDEzOCxcbiAgICAgICAgICAxMDEsXG4gICAgICAgICAgMTEsXG4gICAgICAgICAgMTIxLFxuICAgICAgICAgIDEzMyxcbiAgICAgICAgICAxNTksXG4gICAgICAgICAgMTc0LFxuICAgICAgICAgIDE1LFxuICAgICAgICAgIDE3NSxcbiAgICAgICAgICAyMzQsXG4gICAgICAgICAgMTUzLFxuICAgICAgICAgIDEyMixcbiAgICAgICAgICAzMyxcbiAgICAgICAgICAxNixcbiAgICAgICAgICAyMDAsXG4gICAgICAgICAgMjI2LFxuICAgICAgICAgIDE5OSxcbiAgICAgICAgICAxNzQsXG4gICAgICAgICAgODVcbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIFwicHVibGljXCI6IHtcbiAgICAgICAgXCJ0eXBlXCI6IFwiQnVmZmVyXCIsXG4gICAgICAgIFwiZGF0YVwiOiBbXG4gICAgICAgICAgMzIsXG4gICAgICAgICAgODYsXG4gICAgICAgICAgMTI2LFxuICAgICAgICAgIDEzNyxcbiAgICAgICAgICAxMTYsXG4gICAgICAgICAgMTc2LFxuICAgICAgICAgIDk2LFxuICAgICAgICAgIDUyLFxuICAgICAgICAgIDg5LFxuICAgICAgICAgIDQ3LFxuICAgICAgICAgIDksXG4gICAgICAgICAgMTE1LFxuICAgICAgICAgIDEzNixcbiAgICAgICAgICAyMTgsXG4gICAgICAgICAgMTk5LFxuICAgICAgICAgIDEwMyxcbiAgICAgICAgICAxMzUsXG4gICAgICAgICAgMTQ3LFxuICAgICAgICAgIDUzLFxuICAgICAgICAgIDIxLFxuICAgICAgICAgIDEzMCxcbiAgICAgICAgICA3LFxuICAgICAgICAgIDU2LFxuICAgICAgICAgIDE1MSxcbiAgICAgICAgICAzMCxcbiAgICAgICAgICAxNzEsXG4gICAgICAgICAgMjIxLFxuICAgICAgICAgIDIwMCxcbiAgICAgICAgICAyNTAsXG4gICAgICAgICAgMjQ0LFxuICAgICAgICAgIDEyLFxuICAgICAgICAgIDE0XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICB9LFxuICAgIFwic2lnbmF0dXJlXCI6IHtcbiAgICAgIFwidHlwZVwiOiBcIkJ1ZmZlclwiLFxuICAgICAgXCJkYXRhXCI6IFtcbiAgICAgICAgNDUsXG4gICAgICAgIDE2OSxcbiAgICAgICAgMTYzLFxuICAgICAgICAyNTEsXG4gICAgICAgIDIwNCxcbiAgICAgICAgNzYsXG4gICAgICAgIDE4MyxcbiAgICAgICAgMTUwLFxuICAgICAgICAyNTMsXG4gICAgICAgIDIwNyxcbiAgICAgICAgMTM0LFxuICAgICAgICAxODMsXG4gICAgICAgIDI2LFxuICAgICAgICAxNTYsXG4gICAgICAgIDE0MyxcbiAgICAgICAgMjQ5LFxuICAgICAgICA3NyxcbiAgICAgICAgMTU2LFxuICAgICAgICA0NixcbiAgICAgICAgODMsXG4gICAgICAgIDI1MixcbiAgICAgICAgNDYsXG4gICAgICAgIDIxMyxcbiAgICAgICAgODAsXG4gICAgICAgIDE3LFxuICAgICAgICAxOTUsXG4gICAgICAgIDI5LFxuICAgICAgICAxMzEsXG4gICAgICAgIDE4NSxcbiAgICAgICAgMCxcbiAgICAgICAgODUsXG4gICAgICAgIDk0LFxuICAgICAgICAyMzIsXG4gICAgICAgIDE2MyxcbiAgICAgICAgMjAwLFxuICAgICAgICA3NCxcbiAgICAgICAgMjAsXG4gICAgICAgIDE2NyxcbiAgICAgICAgNjMsXG4gICAgICAgIDIwLFxuICAgICAgICAyNSxcbiAgICAgICAgNDgsXG4gICAgICAgIDgzLFxuICAgICAgICAyMDYsXG4gICAgICAgIDE3OCxcbiAgICAgICAgMjA3LFxuICAgICAgICAxOTEsXG4gICAgICAgIDEyNyxcbiAgICAgICAgMjQ5LFxuICAgICAgICAyMDksXG4gICAgICAgIDM1LFxuICAgICAgICAxNDUsXG4gICAgICAgIDE1NyxcbiAgICAgICAgNTksXG4gICAgICAgIDE0NCxcbiAgICAgICAgMzksXG4gICAgICAgIDEzMCxcbiAgICAgICAgMjIwLFxuICAgICAgICAyNDYsXG4gICAgICAgIDIyLFxuICAgICAgICAxOTIsXG4gICAgICAgIDE5NCxcbiAgICAgICAgMTMxLFxuICAgICAgICAwXG4gICAgICBdXG4gICAgfSxcbiAgICBcImtleUlkXCI6IDFcbiAgfSxcbiAgXCJyZWdpc3RyYXRpb25JZFwiOiAxOTgsXG4gIFwiYWR2U2VjcmV0S2V5XCI6IFwiVklqV29zVGVmS0pJazJNVXFoOHJZMDZwRzNrOUlwWC83am9UQi96dWdpND1cIixcbiAgXCJwcm9jZXNzZWRIaXN0b3J5TWVzc2FnZXNcIjogW10sXG4gIFwibmV4dFByZUtleUlkXCI6IDMxLFxuICBcImZpcnN0VW51cGxvYWRlZFByZUtleUlkXCI6IDMxLFxuICBcImFjY291bnRTeW5jQ291bnRlclwiOiAwLFxuICBcImFjY291bnRTZXR0aW5nc1wiOiB7XG4gICAgXCJ1bmFyY2hpdmVDaGF0c1wiOiBmYWxzZVxuICB9LFxuICBcImRldmljZUlkXCI6IFwiVjhnemUweGlTTXFTSTI1TmN2UVZaUVwiLFxuICBcInBob25lSWRcIjogXCIwMTMyNmU2Yi00YTRiLTRkNjMtYTA0OC00YTAwZjQxMTA5NzNcIixcbiAgXCJpZGVudGl0eUlkXCI6IHtcbiAgICBcInR5cGVcIjogXCJCdWZmZXJcIixcbiAgICBcImRhdGFcIjogW1xuICAgICAgMTksXG4gICAgICAyMTcsXG4gICAgICAxNzMsXG4gICAgICAyNDMsXG4gICAgICAxMzcsXG4gICAgICAyMTksXG4gICAgICAxMixcbiAgICAgIDE4NSxcbiAgICAgIDE4NSxcbiAgICAgIDE4MyxcbiAgICAgIDExOCxcbiAgICAgIDcxLFxuICAgICAgMTg0LFxuICAgICAgMjEyLFxuICAgICAgMjMxLFxuICAgICAgMTY5LFxuICAgICAgMTE1LFxuICAgICAgMTg0LFxuICAgICAgMTUwLFxuICAgICAgMjM5XG4gICAgXVxuICB9LFxuICBcInJlZ2lzdGVyZWRcIjogZmFsc2UsXG4gIFwiYmFja3VwVG9rZW5cIjoge1xuICAgIFwidHlwZVwiOiBcIkJ1ZmZlclwiLFxuICAgIFwiZGF0YVwiOiBbXG4gICAgICAxMzcsXG4gICAgICAxNixcbiAgICAgIDEzNCxcbiAgICAgIDEzNCxcbiAgICAgIDE0NixcbiAgICAgIDQ2LFxuICAgICAgMjA4LFxuICAgICAgMjEsXG4gICAgICAxMDksXG4gICAgICAxLFxuICAgICAgMjE3LFxuICAgICAgMTk2LFxuICAgICAgNTEsXG4gICAgICA2NyxcbiAgICAgIDM0LFxuICAgICAgMTM3LFxuICAgICAgMTAsXG4gICAgICAyMDYsXG4gICAgICAyMSxcbiAgICAgIDE5MFxuICAgIF1cbiAgfSxcbiAgXCJyZWdpc3RyYXRpb25cIjoge30sXG4gIFwiYWNjb3VudFwiOiB7XG4gICAgXCJkZXRhaWxzXCI6IFwiQ0svV25jUUdFT1N3eGNFR0dBWWdBQ2dBXCIsXG4gICAgXCJhY2NvdW50U2lnbmF0dXJlS2V5XCI6IFwiSUkxMDQyVHpXbEtoLy85OWMzQmFsaE9weFZ4aXVSVHkvbkNmajM4bC9BVT1cIixcbiAgICBcImFjY291bnRTaWduYXR1cmVcIjogXCJhUU43c01VVVhVTXp3OFBkeHVRM1ZLSEovcDkrZEgvbng5alpMZXBzZHU2SGdJRk5zRUUvazFIbGc2T1RneWgwOEI4OWcvRC9TcVBPZjN0UkhpWmVDdz09XCIsXG4gICAgXCJkZXZpY2VTaWduYXR1cmVcIjogXCJhTGY3cnVhbjZHajNnZWlKeGZLaDF5SHBuWlpqNVE0SklNOEFqUnRuejluWG9OMVEwZGswR2VENVd4Sit2QlBEekVNTGhIVFVoeC9ERVFvYTVJc0tBZz09XCJcbiAgfSxcbiAgXCJtZVwiOiB7XG4gICAgXCJpZFwiOiBcIjk0NzAzMDkwMjQwOjE2QHMud2hhdHNhcHAubmV0XCIsXG4gICAgXCJuYW1lXCI6IFwiWC5OLk8uUlwiLFxuICAgIFwibGlkXCI6IFwiMjEzNTE2MTQ1NDE0MTU0OjE2QGxpZFwiXG4gIH0sXG4gIFwic2lnbmFsSWRlbnRpdGllc1wiOiBbXG4gICAge1xuICAgICAgXCJpZGVudGlmaWVyXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiOTQ3MDMwOTAyNDA6MTZAcy53aGF0c2FwcC5uZXRcIixcbiAgICAgICAgXCJkZXZpY2VJZFwiOiAwXG4gICAgICB9LFxuICAgICAgXCJpZGVudGlmaWVyS2V5XCI6IHtcbiAgICAgICAgXCJ0eXBlXCI6IFwiQnVmZmVyXCIsXG4gICAgICAgIFwiZGF0YVwiOiBbXG4gICAgICAgICAgNSxcbiAgICAgICAgICAzMixcbiAgICAgICAgICAxNDEsXG4gICAgICAgICAgMTE2LFxuICAgICAgICAgIDIyNyxcbiAgICAgICAgICAxMDAsXG4gICAgICAgICAgMjQzLFxuICAgICAgICAgIDkwLFxuICAgICAgICAgIDgyLFxuICAgICAgICAgIDE2MSxcbiAgICAgICAgICAyNTUsXG4gICAgICAgICAgMjU1LFxuICAgICAgICAgIDEyNSxcbiAgICAgICAgICAxMTUsXG4gICAgICAgICAgMTEyLFxuICAgICAgICAgIDkwLFxuICAgICAgICAgIDE1MCxcbiAgICAgICAgICAxOSxcbiAgICAgICAgICAxNjksXG4gICAgICAgICAgMTk3LFxuICAgICAgICAgIDkyLFxuICAgICAgICAgIDk4LFxuICAgICAgICAgIDE4NSxcbiAgICAgICAgICAyMCxcbiAgICAgICAgICAyNDIsXG4gICAgICAgICAgMjU0LFxuICAgICAgICAgIDExMixcbiAgICAgICAgICAxNTksXG4gICAgICAgICAgMTQzLFxuICAgICAgICAgIDEyNyxcbiAgICAgICAgICAzNyxcbiAgICAgICAgICAyNTIsXG4gICAgICAgICAgNVxuICAgICAgICBdXG4gICAgICB9XG4gICAgfVxuICBdLFxuICBcInBsYXRmb3JtXCI6IFwic21iYVwiLFxuICBcImxhc3RBY2NvdW50U3luY1RpbWVzdGFtcFwiOiAxNzQ4MDY0MzU5LFxuICBcIm15QXBwU3RhdGVLZXlJZFwiOiBcIkFBd0FBR2x0XCJcbn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHazEuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJxRXRpZHpoTkltZVNXZUZOU21QT0JteXJ3SFl5bmFCcFVTeC9kMnk3SEJvPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3MjI1MTY5NjQ1XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2szLmpzb24iOiAie1wia2V5RGF0YVwiOlwid0JzRWFTMGQ4L2FZWkNiK1I5REpOaVJiUFlYNExYd2FxRVZ3SXpXcThIUT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzI0MjI1MDY2MFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrNS5qc29uIjogIntcImtleURhdGFcIjpcIlo4N0kzREVaS0hGREpjME9EdWJEV2JHQ2ZKTTAvbG1IcGVFQVNmWUhWV1U9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDcyNzI3MjU2MjhcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHazcuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJUNUk3WTMyajB5YWd0N1pDelVVSHlLdllJd1cvNDRETkY2ZlZlY0VaZnk0PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3MzAzMzI0NjQwXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2s5Lmpzb24iOiAie1wia2V5RGF0YVwiOlwiZ3lmNTdOL0IzSjN4MUNqRzA5V3Y2dFZWYzBSNVU3ZGhEZXBLZ051VG9Jbz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzMxMTQ2MzgyM1wifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrQi5qc29uIjogIntcImtleURhdGFcIjpcIkRXUlNkN2xXekJKMVpKMW4zL0tweXRJQTc4eElMQzlBT3pZREZiZ3Q0Wnc9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MSxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMV19LFwidGltZXN0YW1wXCI6XCIxNzQ0NDQwNDU5MzMwXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tDLmpzb24iOiAie1wia2V5RGF0YVwiOlwiOEV3b3JTU0s3NDFWcGpSbjdVb2VCa0ZQTG5ySCtXOWk2cy9wendobjF3VT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYxLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMF19LFwidGltZXN0YW1wXCI6XCIxNzQ0NDQwNTgwNzk5XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tELmpzb24iOiAie1wia2V5RGF0YVwiOlwiUjdySXIxWTNmN0tYQmFiVTZkN3kyREdwQjhVVzFzRVlSYzdwald5dlJpST1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYyLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMF19LFwidGltZXN0YW1wXCI6XCIxNzQ0NDQxMzcwMDQ5XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tFLmpzb24iOiAie1wia2V5RGF0YVwiOlwiSHFmcHZUSVNWMjU4T0R4WGt4ek16RTVQc1Q5b0tsajdGck8xRjNSU2Qzcz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCwxXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDQ0NDEzODEyNjVcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa0cuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCI5RjJRY053OTF1UU5HZm5iaG9SOWpXNHNpUEJWWVRRblZwZEE4UzRPeFZRPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDFdfSxcInRpbWVzdGFtcFwiOlwiMTc0NDQ0MTQxMDQ4NFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrSS5qc29uIjogIntcImtleURhdGFcIjpcIk1oUjFySlBVWGk5U0pTVXVhb2VSZUdRM1ZPeGZJNnRxaklUT2ZEMk04N1k9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMV19LFwidGltZXN0YW1wXCI6XCIxNzQ0NDY5MDA0ODE3XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tLLmpzb24iOiAie1wia2V5RGF0YVwiOlwiQ0o2eENqVWcvVjhUWVhRSVk2MitSVUdkM2RxV3I4ajhwSDFuUWl6eCtVdz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCwxXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDQ0NzU0NDY2NzhcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa00uanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJjdXBwUUp6RG0zYjhkS3UwVzVlRjF0aWRFdnFPb0VsVDFBSk9ZRWtTMEJnPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDFdfSxcInRpbWVzdGFtcFwiOlwiMFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrTi5qc29uIjogIntcImtleURhdGFcIjpcIkhOTm1zU2FKOWM5cVN2Smgwak91U0VKdDltREtKOTlaZVVEbDV3VkkzQTQ9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjIsXCJkZXZpY2VJbmRleGVzXCI6WzAsMV19LFwidGltZXN0YW1wXCI6XCIxNzQ0ODY3MTcxMTI5XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tPLmpzb24iOiAie1wia2V5RGF0YVwiOlwiMEJqd0hTMnJVdjVtMHhOUVhFQzRqQ3hPeS9IdzBPVGd0RGtqRlMzcFZuYz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NCxcImRldmljZUluZGV4ZXNcIjpbMCwxLDRdfSxcInRpbWVzdGFtcFwiOlwiMTc0NDg2NzIzNDE1NFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrUS5qc29uIjogIntcImtleURhdGFcIjpcIk9WOVFZZXdnRXQ4bmtwV2w4bUN0djFYMDZ5RWhvamMzVjBmMGRsN0M0aTg9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjQsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw0XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDQ5NTYzNTg2NzJcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa1MuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJDZEJTUHhmSUQyVWJtSXZXK3ZMZkdPOEtpMmtXSXlsYU5YS1p2cnowYldVPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo0LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNF19LFwidGltZXN0YW1wXCI6XCIxNzQ1MDkyNzIyMjg4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tVLmpzb24iOiAie1wia2V5RGF0YVwiOlwiTHNvd2lnUzAwbDNtbmxHNVJJbWFKbGgvNkxhOURkNHFTRU1DVHM3VFdDdz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NCxcImRldmljZUluZGV4ZXNcIjpbMCwxLDRdfSxcInRpbWVzdGFtcFwiOlwiMTc0NTIxNDY4MjM0OFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrVy5qc29uIjogIntcImtleURhdGFcIjpcIlZzalNUODBJc1MydXdhbGZuY2dYTjNBNUhkcVNmRGlDayt3cWtEeDZJNE09XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjQsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw0XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDUyNjM2MTI1MzhcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa1kuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJTcFkyL2RNWjlwdEErR0FURzhqV2Q4MFRNVktyZ3hXN1VUc2xaL1BBeWg0PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo0LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNF19LFwidGltZXN0YW1wXCI6XCIxNzQ1MzA2NzE0NzA4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tfXy5qc29uIjogIntcImtleURhdGFcIjpcIlRISHMzUjlvOTRMRkJ0cXVjT1NmVUVhRjJKYWRjNENHMEZxdDNZcUlNZ2M9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDczMTM4Mzg5NTRcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa2EuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJ2UW1ncVJwZ2JHZk9oUTI0RUtON2JCamlBbkRsZGZUUVlmVW1YZ0grcmlJPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo0LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNF19LFwidGltZXN0YW1wXCI6XCIxNzQ1OTQ1OTExMjQ0XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tjLmpzb24iOiAie1wia2V5RGF0YVwiOlwiZlAyaWJXUGVHSHM4Wk9sYmJNTlJJZnNlNUlyOUd2UHhyM0hTZE1yNTNOOD1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NCxcImRldmljZUluZGV4ZXNcIjpbMCwxLDRdfSxcInRpbWVzdGFtcFwiOlwiMTc0NjE1MjI0OTgzNVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrZS5qc29uIjogIntcImtleURhdGFcIjpcImxlWVZabnVVZTcvQ0JyK1hCd1hnWnFnNk0vY1dJckZmVU1CUVA1WUhSeEU9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjQsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw0XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDYyODY2NzgxMjZcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa2cuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJxRkFwYkZndFdpZ29GN0IxditJUjZEWHBDdCt6M3ZrbEZWa2hUTDZLZXV3PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo0LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNF19LFwidGltZXN0YW1wXCI6XCIxNzQ2NDI3OTU2MTM1XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tpLmpzb24iOiAie1wia2V5RGF0YVwiOlwiZXhlVzY2bjNHN1JJOXZKVk9YbjQwY0ZNaEtPU25sdDVjUmxUQ3FlbUc0WT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NCxcImRldmljZUluZGV4ZXNcIjpbMCwxLDRdfSxcInRpbWVzdGFtcFwiOlwiMTc0NjUzODI1ODM0OFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdray5qc29uIjogIntcImtleURhdGFcIjpcIkVCbWZ3ZktkZHZWUGxYRFRkSHNCVUg5Ykcza21BVHZzWGN6K0M2TVE3cWs9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjQsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw0XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDY2MTk1ODkzNDFcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa20uanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJwblpidHY0ZkFIOVJicGRBUFByZHB1Z3oxT0VITWZaSXM3aE9QelJXMDhBPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo0LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNF19LFwidGltZXN0YW1wXCI6XCIxNzQ2NjM2Njg5NjQ0XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tvLmpzb24iOiAie1wia2V5RGF0YVwiOlwiWGJkNVRUV2tBTFJpUmYxanMvQkdYRTNVQndMaW9QWEVIS2o5d0NqZm1TST1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NCxcImRldmljZUluZGV4ZXNcIjpbMCwxLDRdfSxcInRpbWVzdGFtcFwiOlwiMFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrcC5qc29uIjogIntcImtleURhdGFcIjpcIlVtUXpVcmRZY3ZuVDRxTU94aG5TZmRuOXBjVkljN2hTbUMwSmRPSllDM0k9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjQsXCJkZXZpY2VJbmRleGVzXCI6WzAsMV19LFwidGltZXN0YW1wXCI6XCIxNzQ2NzE0NjczNDcxXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2tyLmpzb24iOiAie1wia2V5RGF0YVwiOlwiQzFZUzhXS2JXTnpJL1FEcnlmOUFaa2xrOGxUcE8xb0N2b3BuNGdJT25mVT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NjcxODUxNjkwOVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrdC5qc29uIjogIntcImtleURhdGFcIjpcInVHRWtOdzVXdXFBUXNINS9XVlpJQlRDcVVqZ2JDM0tIZGU0OXB6Y1g2QkE9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDY3OTQ1NjcyNjJcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHa3YuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJrdm82clRFTGUxWWhIR3FudkEyYlFiZHFjMVg1SU05VDZkUFkyc3Y4NWxFPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ2ODA0MTM4MDU0XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2t4Lmpzb24iOiAie1wia2V5RGF0YVwiOlwiT0YzaUttVi85QXk3b0lzZGdIZ2VaeTY0WTFmR21FeHhEM2ErRTk5R2QrWT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzAzNTkyNzc3NlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdrei5qc29uIjogIntcImtleURhdGFcIjpcIlJSZGtXcForMllIcVJRWVY4bWtDcDFPVW91ZndPUE1vYWg3QTJKM2RWcDg9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDcxOTY1Nzg4OTFcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbEIuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJsaG1ZL2FoSGxMOE51TXhhWm1pRCs2cVdSTDlhNXJsNzRZb1haOWhmOXJVPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3MzE1NTYxNzUzXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xELmpzb24iOiAie1wia2V5RGF0YVwiOlwiVHJPcWtTVmpzVWRVcEFxcU5BdW91TzdSeVpzS2FwUFpyRXY5d0FhSlpOUT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzMyMzA4NjA2OFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdsRi5qc29uIjogIntcImtleURhdGFcIjpcIjZHNm43K1dCNEYwcHFGMHk0TmVEd0tXY1BWRFZmbjI4SjVPeFRHUDlHS1k9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDczMjkyMjk0MTFcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbEguanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCI3c0lBUGF0RGpzeWxMNG1PRm80WlRjV0JjSGQ0VU5mUTF5UGdNdzZ5WjI4PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3MzcwMTU2MjMwXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xKLmpzb24iOiAie1wia2V5RGF0YVwiOlwieEQzNlN1Ujl1dndtZ044am5MdldnTHB4M28wcVZRd2JxT0RZK3NHclBidz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzQxMDE4NDYyN1wifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdsTC5qc29uIjogIntcImtleURhdGFcIjpcIkhIL0JCV284c1QzT255cnVjY3hhY2lkUWxhT044OWF4RHdmMlZKUUovR009XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc0MTEzMjI3MjJcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbE4uanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJnUExraWVjY0QrVHl3UXdycWhRaVBOWkVUTW04MWRpVWM1amFtZ1RxNGdvPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3NDIyNzM0ODU1XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xQLmpzb24iOiAie1wia2V5RGF0YVwiOlwiS1o5eXc4MkZ3dEdOM1dyNW9yYTl5QlRLUnpNSDNqZWpCb3BFek9CZFRQRT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzQ1ODUwODI2OFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdsUi5qc29uIjogIntcImtleURhdGFcIjpcIlpQNk13YkZTdTlPeFpNMEQ3TFRmUVM2QWVOUGtvaVkvNm1JOG01Z2lPNWs9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc0NjE2NzE1MTZcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbFQuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJVTmNjOWtoUjUrNThORysxQTBiUkZNRVhwckJJUmQ1NkNjdjJ0eXBIdVEwPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3NDY3MDU4MzgzXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xWLmpzb24iOiAie1wia2V5RGF0YVwiOlwiamo5TDBSN2JJNThIOCtCTGxFcXJVeTBCS2kybTRDN3RMNE9tTE42WWhuRT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzQ5MDQzNjc5NVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdsWC5qc29uIjogIntcImtleURhdGFcIjpcIkxreSt0TjBNODJJV0RYdUNYT2ZMMDcwMFBienROMG4rbVpqT09oVmcya009XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc1MDY0NTEzMzdcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbFouanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJjSTFvVUxRMHFLTTBzYXRCUFZPVHZjR3lpZ0tnYVJ1ejFKRUtwNmx0UUJzPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIxNzQ3NTQwMzkxOTA4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xiLmpzb24iOiAie1wia2V5RGF0YVwiOlwiclIzYTNyekhUTmU0V2h1Z3h6MjhkamNqR0MvV0xmMG85cDd4T21IWkk0az1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxLDVdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzU0NjEzMTQzM1wifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdsZC5qc29uIjogIntcImtleURhdGFcIjpcIk1ZdnRvNkc0ZGd0THZ0TGZURDZYK1RqSXJUOXdkTTc1L21zSXBGMzgweTA9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMSw1XX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc1OTMxNTIwMjdcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbGYuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJlQWRiOG9Cc253RG54cTBkNENZQXB3Q2FJVUF0bWpJeW5aY2Q1eFBSSDl3PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDEsNV19LFwidGltZXN0YW1wXCI6XCIwXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xnLmpzb24iOiAie1wia2V5RGF0YVwiOlwiZnR4SGRCZHNLT25Bb0t3eFhXd3cxVm1qQmlvcHdnclV2QWpRZTZPMnNWOD1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc2NDI5MjkxMzVcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbGkuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCIwRHdLOGs0aEF4Tjd2blBRdURFNXBTZ0JVbGsrdlFYLzY5Z3VXQ0dIc3A4PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDFdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzY1NTk2MTE5NlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdsay5qc29uIjogIntcImtleURhdGFcIjpcIjg3THB1b1pDeWhmb2x5ZG9tU1N6cGpGSlNMZGlkWTF3UitXbXdzYjN6eHc9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMV19LFwidGltZXN0YW1wXCI6XCIxNzQ3NjcwNDE5MDE2XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xtLmpzb24iOiAie1wia2V5RGF0YVwiOlwiM2pwT2NURlZqTy9IZVFCeUxULzRjMHg2YU43NmVZUEFWbFJ1QnVLRG80bz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc2NzcwMTUxMDFcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUFBQUFHbG8uanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCIzN0srbkxWamdkU3lnVHpsL1gxTmRDVHdLenQ4QnJhWVZweDVQOUhkcjZZPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjo1LFwiZGV2aWNlSW5kZXhlc1wiOlswLDFdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzcxODAzMDEyNlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQUFBQUdscS5qc29uIjogIntcImtleURhdGFcIjpcImZQa1NweG9GV1ZQYTR3M2UrVUZKTGliejI5Q3Z4WVE2YnpIZVZTazgwaFk9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjUsXCJkZXZpY2VJbmRleGVzXCI6WzAsMV19LFwidGltZXN0YW1wXCI6XCIxNzQ3NzYxMTc5Nzc0XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBQUFBR2xzLmpzb24iOiAie1wia2V5RGF0YVwiOlwia25adXc1SmlFR0diR2NVWDRyczZzemU2ZU9ra3Z2QzVJdzJYa0tJUWtybz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6NSxcImRldmljZUluZGV4ZXNcIjpbMCwxXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDgwMDg0NzkzMjJcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHaysuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJ0dlFEM2czSWx6bUZDeUNlSndVVzg0R2dRYXVFS2hIdmxLa2Nyc1UweTBBPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzMxMjA2MDYxMFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrMC5qc29uIjogIntcImtleURhdGFcIjpcInNZaEt0ZUw0b0ZHTXR3OS9pcC8zQ2d5WFVZVkF5TVBPbTFEcFBFZit5dlU9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3MjIwODgwMjEzXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2syLmpzb24iOiAie1wia2V5RGF0YVwiOlwiRWJUcGZ1Um5lZFFZU1M4aHVuaUErMFhZTkhuWkphOXBUNk51allXOC9lZz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDcyNDEwOTM4ODFcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHazQuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJibFZmbHJ0Mjk2SmQ3UXZxWEh3WTd3blZyV2UwRkRYWlhMQ1Y3c0pCMkJFPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzI0NDMwMTA0OVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrNi5qc29uIjogIntcImtleURhdGFcIjpcIklLQkIxRVdYSGJYOExSZEsrcjlUU3lEV1orZGJxOGk4YjA1YTVscmRBYnc9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3Mjk4NzQ1NzU3XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2s4Lmpzb24iOiAie1wia2V5RGF0YVwiOlwiR3lycTBQR2g2LzBpbThZbFZtUm5NMnV5cDczUDBLL0JvRWxaV1ZNaWl0bz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDczMDUzMzE0OTdcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa0guanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJidE5UazBzMmZRNnU5SlBnRitjQ1Y3d3B4QXhpNkkwbmQvZUdGNHhnendvPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDQ0NjY5Nzc1ODVcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa0ouanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCIxUUkyenowN0NSYUJDUDZvVWxSRWN3V2p5SlhLdytoNHYxRVM4OTM1OURVPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDQ0NzA2MTQ0OThcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa0wuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCIxWkxKbStEckp6UDRlNnJvRTdNd3QxQXBFUVZuNXlmcE80dXl4ZEJUNmNBPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDQ1MjYyMjQ5MzVcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa1AuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJrcVcwME1lNXEvSW9ocTBVUDhEUk9LcGR0UUpISkI2Q0djaFBwT2xlSy8wPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDQsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NDk1Mjk2MTYyOVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrUi5qc29uIjogIntcImtleURhdGFcIjpcIk0zVGszeUFDZkRzWlQ1dHNkREpDOTNCcjJVQUhWSnJvYTAzeDFRZzlzZXM9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNCwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ1MDkyNzE1Nzk5XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2tULmpzb24iOiAie1wia2V5RGF0YVwiOlwiUG9kVUQ5Nm9zbWlsbHUrR1V5aWFTMWZUQ0E2djdHZ3crSnF4dnJVWFpZUT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw0LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDUyMTMyOTY1NDdcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa1YuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJ6MDBrYmRJWjZ5N2V4M0dxYWxyeXFOQ3hxNitUN0V2NjZKeklyMys1NkNjPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDQsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NTI2MzA2NjE1N1wifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrWC5qc29uIjogIntcImtleURhdGFcIjpcIlFIUEtHTFczWTFib0RlNndiYW1WcXV6WmxkMmd3VjZtM1c2UmJjZ0NZd3c9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNCwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ1MzAwNjg4ODg5XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2taLmpzb24iOiAie1wia2V5RGF0YVwiOlwiaVFtWWtlbi9nYVdZek5MTTY2Y3pYako2VWNNZ0w5VUNLbXJmeCtyRjVhYz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw0LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDU5NDU0Mzc0NThcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa2IuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJSTVRuZWRBUk82bEhnOGJJTEk2SUhyd0F3OS9wRlR3aHB5WXhGL2d6Qi80PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDQsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NjE0ODQ3MDk3NFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrZC5qc29uIjogIntcImtleURhdGFcIjpcImR1VllISXBUUXUyYmhiVFFvMjFGWjZHem0yUXBXd1QxZ3JTRElkUG9kNlk9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNCwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ2MjgzNjQ0NDkyXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2tmLmpzb24iOiAie1wia2V5RGF0YVwiOlwibHNHQ2lqenRLRmdGcUE4SlFUSzYvcFlsWXgwZTBmOWZwRWZvbHBBM0JoWT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw0LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDY0MjIyODQ4MjhcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa2guanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJoaWtWeVdYUHY2WUczU293K2U1cW4wS3VkTEhLQVZlVE1vbUlLWFlCU1lRPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDQsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NjUzMzc1MzEyNVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrai5qc29uIjogIntcImtleURhdGFcIjpcIm9jT0R4UlhxT1dYYXNvQ0VweG10dXpNc0MxRm1zalI1bEI1WFZwRnhpR1k9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNCwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ2NjE3OTMzODEwXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2tsLmpzb24iOiAie1wia2V5RGF0YVwiOlwiM3N5TENDNGxLUGFNc1BsSGFtbkt3LzF1YmUxZ3duakFnT3lwVmVsMzRMaz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw0LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDY2MjkxMjg1NDVcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa24uanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJPKytzQ3paZjE3Ritja05rZHhTL1Q2Z1E0WUNuckJ0Q0l6VTBRMDMrdXMwPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDQsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NjY5MjAzODUzMlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrcS5qc29uIjogIntcImtleURhdGFcIjpcInp5TVhURUNiMTd2TXhpYndqbi9JYlRjMjA3VVdaTjFaeUFzVTBVVVRlU0U9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ2NzE3Nzg5OTU4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2tzLmpzb24iOiAie1wia2V5RGF0YVwiOlwiZC9YSitzcE5zVERmSml5c3l6aEE1UHZsVHN0Z0VVWUIrS2tZNVJrN2krWT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDY3ODk1MjQyNTBcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHa3UuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCI5S2dVVDk5QjZBZVhXWStsWTNDODFjRjEyTXpoZDNIT3E0T2NhYytkdjZ3PVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0Njc5NzUzMzM5NVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdrdy5qc29uIjogIntcImtleURhdGFcIjpcIkZlZVA3RUVCRCtyZmpmZENWTjBBdFhsQW5BOGZBcTJMbCtvLzFyd3ZxYnM9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3MDI1MTI3OTI0XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2t5Lmpzb24iOiAie1wia2V5RGF0YVwiOlwiWUpIZkxRbXprVzg5Q1ByTWJHSmNnQUYvbnRmS2YyTVdaRjNBMXVTTENRYz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDcxOTAxMzY4MzNcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHbEEuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCIzeGJvM3cvdEdlSm5USjkxWFVpd2VGekhWaysxKzhDSjltajdKN0thSmVrPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzMxMzkzNTI3MFwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsQy5qc29uIjogIntcImtleURhdGFcIjpcIm1FWGtBOW9HNzhTekMyc3UyaVNSbVlsbjNoOHN5WWNKRWtSc1ZqMkVxMGM9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3MzIwMTY1Mzk4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2xFLmpzb24iOiAie1wia2V5RGF0YVwiOlwiNEpzSW1hQXNwU0JmbVhabktjMndGV0tMQ2t1Y3huVVp1MnJZT0ZYWmc5MD1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDczMjY2MDA2NTRcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHbEcuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCI5SGFyeUVPZUJwY1VnaEF3SkY3QzZzZkRRWXJvd1ZQNGtGdHdjayszT25VPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzM2NzM4MzY1MlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsSS5qc29uIjogIntcImtleURhdGFcIjpcIjFFcCtndHpWZWxDZ1o2ekU2ekVLWkp0Q2RhcWdQcnU0S282VSt0cWZrV0E9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3NDA4MDc1NjI4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2xLLmpzb24iOiAie1wia2V5RGF0YVwiOlwid1BJOSswZjF3NnYxNk4yS0JlcGNoK1hva1pWaVR0S3RpS0ZjblZZclRKdz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc0MTAyMjc0MzJcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHbE0uanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJVSDQ5cWJOYkU5eTBSQllad0ZiY1U4TW5oTFJZTjM0bllreFhXbmo4ZjVnPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzQxOTE0MzEwOVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsTy5qc29uIjogIntcImtleURhdGFcIjpcIi9SUGJsbE5aOFVyRytKajZvOWhrcEFmTHFZTWJlZ08xZlJFTnJSa1ExbFk9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3NDUzODk5NDQ4XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2xRLmpzb24iOiAie1wia2V5RGF0YVwiOlwiWUtMRFc0SUpvSGtWK01jUVpnRHNia3N2am81UW54TXFqaTU5UFZxbE5jVT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc0NjExMjEyODlcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHbFMuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJLVnA4cDEyRTRxaDVWVnpYYlhHdmNGdUVRWlgxc1FpUWlTMmIwSGNQWDFJPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzQ2MTk4MjIzNVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsVS5qc29uIjogIntcImtleURhdGFcIjpcImFoZEhPMUxhazhqa01yMm1Xb2wxbHVPaHkrekJBc3A3OThMaDNqUUFLUlk9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3NDgwMzQ4NzQ0XCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2xXLmpzb24iOiAie1wia2V5RGF0YVwiOlwid2hSS2p4ejIrU2tJN3VIZ09JN1ZUZ0N5RFQydERiMVlVWmNqb0pBaVJQVT1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc1MDI2OTk5MDNcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHbFkuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCI3ZVB0QzlzcjV0emlBdVdxaFJtUWorWjNRaThZZDlTN0ZZRFpTaWpQU3dFPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzUzMjI4NzUzOVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsYS5qc29uIjogIntcImtleURhdGFcIjpcIlpUVHZDU0hpWnZLcTRUb1ZIWC9kR3k3ZVNjR2YvMncrdWFuTE4vTjNyNlk9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsNSwxMl19LFwidGltZXN0YW1wXCI6XCIxNzQ3NTQyNjg5ODAzXCJ9IiwKICAiYXBwLXN0YXRlLXN5bmMta2V5LUFBd0FBR2xjLmpzb24iOiAie1wia2V5RGF0YVwiOlwiU1dPK3JvTzIvcnIrcUpRNGcvMXBwMEQwa3A0bmpLa09OZkpzRys1ekRwdz1cIixcImZpbmdlcnByaW50XCI6e1wicmF3SWRcIjoxNzUzNzA1MjYzLFwiY3VycmVudEluZGV4XCI6MSxcImRldmljZUluZGV4ZXNcIjpbMCw1LDEyXX0sXCJ0aW1lc3RhbXBcIjpcIjE3NDc1ODQwNDUzMzFcIn0iLAogICJhcHAtc3RhdGUtc3luYy1rZXktQUF3QUFHbGUuanNvbiI6ICJ7XCJrZXlEYXRhXCI6XCJDT2dmVGU4eVJ3U0RReS94ZDBvQWVQME5LdDgrWk4wNXY2dkFIZGRhMThjPVwiLFwiZmluZ2VycHJpbnRcIjp7XCJyYXdJZFwiOjE3NTM3MDUyNjMsXCJjdXJyZW50SW5kZXhcIjoxLFwiZGV2aWNlSW5kZXhlc1wiOlswLDUsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzYxNjc3MzI4MVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsaC5qc29uIjogIntcImtleURhdGFcIjpcIm9wQTJLMkZKbzZFVDhGUFM2ZTVEUU9BQ3hUWDFsWjFDM2VMWGZmcEdCZGc9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzY1MjE3MjgzMlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsai5qc29uIjogIntcImtleURhdGFcIjpcIjg5Mk1XZE5zV2xQVWlwZFlLWnBqODhpS3BpR29xL3FrMm12OXA4ckhjeTg9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzY2NTU0MDUzN1wifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsbC5qc29uIjogIntcImtleURhdGFcIjpcInY2c09sdFhLU21oZXh6YU5UOCsxdUNQRUJ6THJQeG42OHNiWUZPRGVjejA9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzY3MjMwMTg1OVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsbi5qc29uIjogIntcImtleURhdGFcIjpcIm5uRHU0QStEY3lXTXZZOUlTcktoaGJSWERTc3VuZ0ZUSFRwdE05RGVwb2M9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0NzcwNjMyMDQxMlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdscC5qc29uIjogIntcImtleURhdGFcIjpcIitNSko4UW8zejlHWlppMS9UWmwyalVjN1dLRExHTVdpZ01IOFcrL2dheUU9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0Nzc1ODQ0MzgwNVwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsci5qc29uIjogIntcImtleURhdGFcIjpcIjV0V3ZiRFE3R256eTFPTHFyREtiWC9rRmdKdEhMRmRrUzZaM29EajBwR0k9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0ODAwNjY3NzczNlwifSIsCiAgImFwcC1zdGF0ZS1zeW5jLWtleS1BQXdBQUdsdC5qc29uIjogIntcImtleURhdGFcIjpcImUvbitocFNSbEZsMDdwM3Y2TmRMS0ZKMHpPOWF3dVdETTM4WC90TTN6YlE9XCIsXCJmaW5nZXJwcmludFwiOntcInJhd0lkXCI6MTc1MzcwNTI2MyxcImN1cnJlbnRJbmRleFwiOjEsXCJkZXZpY2VJbmRleGVzXCI6WzAsMTJdfSxcInRpbWVzdGFtcFwiOlwiMTc0ODAxODY3NzQ5NVwifSIKfQ=="  // PUT your SESSION_ID 


module.exports = {

  menu: process.env.MENU || "", /**  Available @MENU @Schemes 1: Aztec_Md, 2: A17_Md, 3: Suhail-Md Default ---------- If Not Choose then it Randomely Pic One Of Them Each time **/

  HANDLERS: process.env.PREFIX  || ".",
  BRANCH  : process.env.BRANCH  || "main",
  VERSION : process.env.VERSION || "3.0.1-developement",
  caption : global.caption || "" , // ```『 ᴘᴏᴡᴇʀᴇᴅ ʙʏ GlobalTechInfo ® 』```", //*『sᴜʙsᴄʀɪʙᴇ • sᴜʜᴀɪʟ ᴛᴇᴄʜ』*\n youtube.com/@GlobalTechInfo"),
 
  author : process.env.PACK_AUTHER|| "",
  packname: process.env.PACK_NAME || "",
  botname : process.env.BOT_NAME  || "Suhail-MD",
  ownername:process.env.OWNER_NAME|| "Suhail:Shy<3",


  errorChat : process.env.ERROR_CHAT || "",
  KOYEB_API : process.env.KOYEB_API  || "false",

  REMOVE_BG_KEY : process.env.REMOVE_BG_KEY  || "",
  OPENAI_API_KEY: process.env.OPENAI_API_KEY || "",
  HEROKU_API_KEY: process.env.HEROKU_API_KEY || "",
  HEROKU_APP_NAME:process.env.HEROKU_APP_NAME|| "",
  antilink_values:process.env.ANTILINK_VALUES|| "all",
  HEROKU: process.env.HEROKU_APP_NAME && process.env.HEROKU_API_KEY,


  WORKTYPE: process.env.WORKTYPE || process.env.MODE|| "private",
  LANG: ( process.env.THEME ||  "SUHAIL"  ).toUpperCase(),



};



global.ELEVENLAB_API_KEY = process.env.ELEVENLAB_API_KEY || "";
global.aitts_Voice_Id = process.env.AITTS_ID|| "37";





















global.rank = "updated"
global.isMongodb = false; 
let file = require.resolve(__filename)
fs.watchFile(file, () => { fs.unwatchFile(file);console.log(`Update'${__filename}'`);delete require.cache[file];	require(file); })
 

// ========================= [ Disables in V.1.2.8 ] ===============================\\  
  //style : process.env.STYLE || "2",  // put '1' & "2" here to check bot styles
  //readmessage:process.env.READ_MESSAGE|| "false",
  //warncount: process.env.WARN_COUNT || 3,
  //userImages:process.env.USER_IMAGES|| "text",  // SET IMAGE AND VIDEO URL FOR BOT MENUS 
  //disablepm: process.env.DISABLE_PM || "false",
  //MsgsInLog: process.env.MSGS_IN_LOG|| "false", // "true"  to see messages , "log" to open logs , "false" to hide logs messages
  //readcmds:process.env.READ_COMMANDS|| "false", 
  //alwaysonline:process.env.WAPRESENCE|| "unavailable", // 'unavailable' | 'online' | 'composing' | 'recording' | 'paused'
  //read_status: process.env.AUTO_READ_STATUS || "false",
  //save_status: process.env.AUTO_SAVE_STATUS || "false",
  //aitts_Voice_Id : process.env.AITTS_ID || "37",
  //ELEVENLAB_API_KEY: process.env.ELEVENLAB_API_KEY  || "",
